<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="build-common" default="build" xmlns:ivy="antlib:org.apache.ivy.ant">
    <property name="src.dir" location="../${ant.project.name}/src/main/java"/>
    <property name="test.src.dir" location="../${ant.project.name}/src/test/java"/>
    <property name="build.dir" location="../build"/>
    <property name="classes.dir" location="${build.dir}/classes/main"/>
    <property name="test.classes.dir" location="${build.dir}/test-classes"/>
    <property name="resources.dir" location="${build.dir}/resources/main"/>
    <property name="test.resources.dir" location="${build.dir}/resources/test"/>
    <property name="test.reports.dir" location="${build.dir}/test-reports"/>
    <property name="ivy.reports.dir" location="${build.dir}/ivy-reports"/>

    <import file="dependencies.xml"/>

    <target name="init">
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${test.classes.dir}"/>
        <mkdir dir="${test.reports.dir}"/>

		<mkdir dir="${user.home}/.ant/lib"/>
        <get dest="${user.home}/.ant/lib/ivy.jar" src="http://search.maven.org/remotecontent?filepath=org/apache/ivy/ivy/2.4.0/ivy-2.4.0.jar"/>
		
        <ivy:resolve/>
        <ivy:report todir="${build.dir}/ivy-report" graph="false"/>

        <ivy:cachepath pathid="compile.path" conf="compile"/>
        <ivy:cachepath pathid="runtime.path" conf="runtime"/>
        <ivy:cachepath pathid="test.path"    conf="test"/>
    </target>

    <target name="compile" depends="init, processResources" description="Compiles source code">
        <javac srcdir="${src.dir}" destdir="${classes.dir}" includeantruntime="false" debug="true"
               classpathref="compile.path"/>
    </target>

    <target name="processResources" depends="init" description="Process resources">
        <copy todir="${resources.dir}">
            <fileset dir="src/main/resources"
                     includes="**/*.xml,**/*.properties,**/*.txt,**/*.ico"/>
        </copy>
        <copy todir="${test.resources.dir}">
            <fileset dir="src/test/resources"
                     includes="**/*.xml,**/*.properties,**/*.txt,**/*.ico"/>
        </copy>
    </target>

    <target name="compile-tests" depends="compile">
        <javac srcdir="${test.src.dir}" destdir="${test.classes.dir}" includeantruntime="false" debug="true">
            <classpath>
                <path refid="test.path"/>
                <pathelement path="${classes.dir}"/>
                <pathelement path="${java.class.path}"/>
            </classpath>
        </javac>
    </target>

    <target name="test" depends="compile-tests">
        <junit printsummary="yes" haltonfailure="yes">
            <classpath>
                <path refid="test.path"/>
                <pathelement path="${classes.dir}"/>
                <pathelement path="${test.classes.dir}"/>
                <pathelement path="${test.resources.dir}"/>
            </classpath>
            <formatter type="xml"/>
            <batchtest fork="yes" todir="${test.reports.dir}">
                <fileset dir="${test.src.dir}">
                    <include name="**/*Test*.java"/>
                    <exclude name="**/AllTests.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="build" depends="test"/>
    <target name="install" depends="jar, war"/>

    <target name="run" depends="build">
        <java classname="org.demo.App">
            <classpath>
                <path refid="runtime.path"/>
                <pathelement location="${classes.dir}"/>
            </classpath>
        </java>
    </target>

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="clean-all" depends="clean">
        <ivy:cleancache/>
    </target>


    <target name="compile.dependencies"
            description="Creates distributable (includes dependencies)">
        <antcall target="depend.${ant.project.name}">
            <param name="dependency.target" value="compile"/>
        </antcall>
    </target>

    <target name="test.dependencies"
            description="Creates distributable (includes dependencies)">
        <antcall target="depend.${ant.project.name}">
            <param name="dependency.target" value="test"/>
        </antcall>
    </target>

    <target name="build.dependencies"
            description="Creates distributable (includes dependencies)">
        <antcall target="depend.${ant.project.name}">
            <param name="dependency.target" value="build"/>
        </antcall>
    </target>

    <target name="copy-dependencies">
    </target>

    <target name="jar" description="package, output to JAR">
    </target>

    <target name="war">
    </target>
</project>